name: Jack-And-The-Beanstalk
author: david

category: Hard

description: |
  ## Problem Statement:
  Jack was playing a game in the village fair and won some seeds and a weird map. The seeds had numbers on them and the map had a sequence of numbers. Jack did not know that the numbers meant. He went to his father who told him that the seeds are of a legendary tree called a BeanStalk. Jack knew about a BST, but never did he hear about a BeanStalk. His father explained that a Balanced BeanStalk is a modified Balanced BST such that for nodes at odd depths the greater of the child nodes is on the right and smaller one on the left.  Jack's father tells him that if he is able to find the inorder of the BeanStalk, and plant the seeds in the same order, a huge tree will grow which will make him very rich. Jack is given the inorder traversal of a BST. Help Jack find the Inorder traversal of the Balanced BeanStalk formed from the inorder sequence of BST. 
  

  ## Input Format:
  The first line contains the +ve number 'n' , which denotes the number of elements of the Balanced BeanStalk. 
  The second line contains the inorder traversal of a BST .

  ## Output Format:
  A single line containing spaces integers representing the Inorder traversal of the Balanced BeanStalk.
  
  

  ## Constraints:
  1<=n<=10^5  
  -(10^9) <= A <= 10^9

  ## Sample Input:
  7
  20 30 40 50 60 70 80  

  ## Sample Output:
  40 30 20 50 80 70 60  


  ## Explanation:
  From the input, we construct a BST (as shown below)
              50 
           /     \ 
          30      70 
         /  \    /  \ 
       20   40  60   80 

  From this BST, we can construct a Balanced Beanstalk
          50
        /   \
       30   70
      / \   | \
    40  20 80 60

  the output will be 40 30 20 50 80 70 60

points: 500

test_cases: 
  sample:
    1:
      input: |
        7
        20 30 40 50 60 70 80
      output: |
        40 30 20 50 80 70 60 
  hidden:
    1:
      input:
        file: ./in1.txt
      output:
        file: ./out1.txt
    2:
      input:
        file: ./in2.txt
      output:
        file: ./out2.txt
    3:
      input:
        file: ./in3.txt
      output:
        file: ./out3.txt 
    4:
      input:
        file: ./in4.txt
      output:
        file: ./out4.txt 
    5:
      input:
        file: ./in5.txt
      output:
        file: ./out5.txt 
   
  
round: 2

visibility: hidden

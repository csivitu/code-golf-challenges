name: Simple Champagne Tower
author: SrishtiGohain

# Category can be Easy, Medium or Hard
category: Easy

# This will be visible on the frontend, should consist of all
# data that the user needs to see.
description: |
  Problem Statement:
  Rosa's 21st birthday is coming up and her family is planning an amazing party for her. Her sister Lisa decides to make a Champagne Tower for the party.
  As Lisa has never tried this before, the structure of her tower is quite simple. It will be a triangular tower with N levels. The number of champagne glasses 
  in each level is equal to the level number. The maximum capacity of each champagne glass is 100ml. After making the Simple Champagne Tower, Lisa starts filling 
  the glasses of the tower with Dom Perignon- Rosa's favourite champagne. She starts pouring into the topmost glass at the rate of 100ml per second. Once a glass 
  becomes full, the champagne pours over along its edges equally into the two glasses immediately under it. After T seconds, Lisa's mother asks her - "How many
  glasses have you completely filled so far?" What is Lisa's answer?

  Input Format:
  The first line of the input is an integer N which is equal to the number of levels in Lisa's Champagne Tower.
  The second line of the input is an integer T which denotes the number of seconds after Lisa started pouring the champagne when her mother asked her the question.

  Output Format:
  The output is an integer which denotes the number of completely filled champagne glasses after T seconds.

  Sample Input:
  3
  2

  Sample Output:
  1
  
  Explanation:
  The Champagne Tower with N=3 looks like
      A
     B C
    D E F
  where A...F are champagne glasses. 
  Given T=2,
  - When T=1, glass A will be completely filled.
  - When T=2, glasses B and C will both be half-filled.
  Hence, after T=2, the number of completely filled champagne glasses=1.
                 
points: 500

# Test cases are of 2 types - sample and hidden. Test cases are numbered.
# Each test case has an `input` and an `output`. The input and output may
# be multiline strings or optionally they can have a `file` attribute with
# the path of the file from which the input must be taken.
test_cases:
  sample:
    1:
      input: |
        3
        4
      output: |
        3
  hidden:
    1:
      input: 
        file: ./in1.txt
      output:
        file: ./out1.txt
    2:
      input:
        file: ./in2.txt
      output:
        file: ./out2.txt

round: 1

visibilty: hidden



